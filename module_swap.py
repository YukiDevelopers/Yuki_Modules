from pyrogram import Client, filters
import json

CONFIG_FILE = "config.json"

with open(CONFIG_FILE, "r") as file:
    config_data = json.load(file)
    prefix_userbot = config_data['prefix']

cinfo = f"üîÑ`{prefix_userbot}swap`"
ccomand = " –ò–∑–º–µ–Ω—è–µ—Ç —Ä–∞—Å–∫–ª–∞–¥–∫—É —Ç–µ–∫—Å—Ç–∞. –∞–≤—Ç–æ—Ä: (`@im_del_acc`)"


def register_module(app: Client):
    @app.on_message(filters.me & filters.command("swap", prefixes=prefix_userbot))
    def swap(_, message):
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–≤–µ—Ç–∞
        if message.reply_to_message:
            original_text = message.reply_to_message.text
            if original_text:
                swapped_text = swap_layout(original_text)
                message.reply_to_message.reply_text(swapped_text)
                message.delete()
            else:
                message.edit("‚ùóÔ∏è –û—à–∏–±–∫–∞: –ù–µ—Ç —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è.")
        else:
            message.edit("‚ùóÔ∏è –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ —Å–≤–∞–ø–Ω—É—Ç—å!")

eng_to_rus = str.maketrans(
    "qwertyuiop[]asdfghjkl;'zxcvbnm,./QWERTYUIOP{}ASDFGHJKL:\"ZXCVBNM<>?~`!@#$%^&*()_+",
    "–π—Ü—É–∫–µ–Ω–≥—à—â–∑—Ö—ä—Ñ—ã–≤–∞–ø—Ä–æ–ª–¥–∂—ç—è—á—Å–º–∏—Ç—å–±—é.–ô–¶–£–ö–ï–ù–ì–®–©–ó–•–™–§–´–í–ê–ü–†–û–õ–î–ñ–≠–Ø–ß–°–ú–ò–¢–¨–ë–Æ,–Å—ë!\"‚Ññ;%:?*()_+"
)
rus_to_eng = str.maketrans(
    "–π—Ü—É–∫–µ–Ω–≥—à—â–∑—Ö—ä—Ñ—ã–≤–∞–ø—Ä–æ–ª–¥–∂—ç—è—á—Å–º–∏—Ç—å–±—é.–ô–¶–£–ö–ï–ù–ì–®–©–ó–•–™–§–´–í–ê–ü–†–û–õ–î–ñ–≠–Ø–ß–°–ú–ò–¢–¨–ë–Æ,–Å—ë!\"‚Ññ;%:?*()_+",
    "qwertyuiop[]asdfghjkl;'zxcvbnm,./QWERTYUIOP{}ASDFGHJKL:\"ZXCVBNM<>?~`!@#$%^&*()_+"
)


def swap_layout(text):
    words = text.split()
    swapped_words = []
    for word in words:
        if word.isupper():
            swapped_word = word.lower().translate(
                rus_to_eng if '–∞' <= word.lower()[0] <= '—è' or word.lower()[0] == '—ë' else eng_to_rus)
            swapped_words.append(swapped_word.upper())
        else:
            swapped_words.append(
                word.translate(rus_to_eng if '–∞' <= word.lower()[0] <= '—è' or word.lower()[0] == '—ë' else eng_to_rus))
    return ' '.join(swapped_words)
